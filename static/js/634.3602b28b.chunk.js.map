{"version":3,"file":"static/js/634.3602b28b.chunk.js","mappings":"gQAIA,SAASA,EAAT,GAA+C,IAAnBC,EAAkB,EAAlBA,QAASC,EAAS,EAATA,MACnC,OACE,iBAAKC,UAAU,iBAAiBD,MAAOA,EAAvC,WACE,gBAAKC,UAAU,cAAcC,IAAKH,EAAQI,YAAYC,KAAMC,IAAI,kBAChE,gBAAKJ,UAAU,cAAf,UACE,yBACGF,EAAQA,SACT,mBACA,4BACG,IAAIO,KAAKC,aAAa,MAAMC,OAAOT,EAAQU,QAC3C,IAFH,0BAYV,QAEAX,EAAiBY,aAAe,CAC9BX,QAAS,CACPA,QAAS,GACTU,OAAQ,EACRN,YAAa,CACXC,KAAM,KAGVJ,MAAO,SCjCT,MAAkC,uCAAlC,EAAkF,8BAAlF,EAAwH,6BAAxH,EAAuK,uC,sDCwFvK,MA5EA,WACE,IAAQW,GAAkBC,EAAAA,EAAAA,MAAlBD,cAEFE,GADaC,EAAAA,EAAAA,KAAY,SAACC,GAAD,OAAWA,EAAMC,cAClBC,QAAO,SAACJ,GAAD,OAAeA,EAAUK,OAASP,KAAgB,GACvF,GAAkCQ,EAAAA,EAAAA,UAAS,IAA3C,eAAOC,EAAP,KAAkBC,EAAlB,KACIC,EAAQ,EAqCZ,OApCAC,EAAAA,EAAAA,YAAU,WAER,IADA,IAAIC,EAAe,GACVC,EAAI,EAAGA,EAAIZ,EAAUO,UAAUM,OAAQD,GAAK,EACnDD,GAAY,UAAOX,EAAUO,UAAUK,GAA3B,KAHA,wCAKd,8FACQE,MAAM,0CAAD,OAA2CH,EAA3C,eACRI,MAAK,SAACC,GAAD,OAAUA,EAAIC,UACnBF,MAAK,SAACG,GAAD,OAAUV,EAAaU,MAHjC,4CALc,0DAUdC,KACC,KA0BD,iCACE,SAACC,EAAA,EAAD,CAAQC,OAAO,UACf,iBAAKjC,UAAWkC,EAAhB,UA1BJ,WACE,OAAQxB,GACN,IAAK,OACH,OAAO,gBAAKV,UAAWkC,EAAcjC,IAAKkC,EAAAA,EAAS/B,IAAI,kBACzD,IAAK,gBACH,OAAO,gBAAKJ,UAAWkC,EAAcjC,IAAKmC,EAAAA,EAAiBhC,IAAI,kBAEjE,IAAK,gBACH,OAAO,gBAAKJ,UAAWkC,EAAcjC,IAAKoC,EAAAA,EAAiBjC,IAAI,kBAEjE,IAAK,SACH,OAAO,gBAAKJ,UAAWkC,EAAcjC,IAAKqC,EAAAA,EAAWlC,IAAI,kBAE3D,IAAK,oBACH,OAAO,gBAAKJ,UAAWkC,EAAcjC,IAAKsC,EAAAA,EAAYnC,IAAI,kBAE5D,IAAK,SACH,OAAO,gBAAKJ,UAAWkC,EAAcjC,IAAKuC,EAAAA,EAAWpC,IAAI,kBAE3D,QACE,OAAO,MAONqC,IACD,2BACG7B,EAAUK,MACX,mBACA,4BACG,IAAIZ,KAAKC,aAAa,MAAMC,OAAOK,EAAUJ,QAC7C,IAFH,yBAOJ,eAAIR,UAAWkC,EAAf,iCACA,gBAAKlC,UAAWkC,EAAhB,SACGf,EAAUuB,KACT,SAAC5C,GACC,OAAIuB,EAAQ,GACI,IAAVA,EACFA,EAAQ,EACDA,GAAS,GACX,SAAC,EAAD,CAA+CvB,QAASA,EAASC,MAAM,QAAhDD,EAAQI,YAAYyC,MAEpDtB,GAAS,GACF,SAAC,EAAD,CAA+CvB,QAASA,EAASC,MAAM,SAAhDD,EAAQI,YAAYyC","sources":["components/CountriesDisplay/CountriesDisplay.jsx","webpack://react-covid-tracker/./src/Pages/ContinentPage/ContinentPage.module.css?3dbd","Pages/ContinentPage/ContinentPage.jsx"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport './CountriesDisplay.css';\n\nfunction CountriesDisplay({ country, color }) {\n  return (\n    <div className=\"countryWrapper\" color={color}>\n      <img className=\"countryFlag\" src={country.countryInfo.flag} alt=\"Country flag\" />\n      <div className=\"countryInfo\">\n        <p>\n          {country.country}\n          <br />\n          <span>\n            {new Intl.NumberFormat('en').format(country.active)}\n            {' '}\n            active cases\n          </span>\n        </p>\n\n      </div>\n    </div>\n  );\n}\n\nexport default CountriesDisplay;\n\nCountriesDisplay.defaultProps = {\n  country: {\n    country: '',\n    active: 0,\n    countryInfo: {\n      flag: '',\n    },\n  },\n  color: 'false',\n};\n\nCountriesDisplay.propTypes = {\n  country: PropTypes.shape({\n    country: PropTypes.string,\n    active: PropTypes.number,\n    countryInfo: PropTypes.shape({\n      flag: PropTypes.string,\n    }),\n  }),\n  color: PropTypes.string,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"continentHeader\":\"ContinentPage_continentHeader__6eYhq\",\"mapImg\":\"ContinentPage_mapImg__Hl6OX\",\"title\":\"ContinentPage_title__cCU0u\",\"contriesDisplay\":\"ContinentPage_contriesDisplay__xzQsj\"};","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport Navbar from '../../components/Navbar/Navbar';\nimport CountriesDisplay from '../../components/CountriesDisplay/CountriesDisplay';\nimport style from './ContinentPage.module.css';\nimport africaIMG from '../../images/africa.svg';\nimport asiaIMG from '../../images/asia.svg';\nimport europeIMG from '../../images/europe.svg';\nimport northAmericaIMG from '../../images/northAmerica.svg';\nimport oceaniaIMG from '../../images/oceania.svg';\nimport southAmericaIMG from '../../images/southAmerica.svg';\n\nfunction ContinentPage() {\n  const { continentName } = useParams();\n  const continents = useSelector((state) => state.continents);\n  const continent = (continents.filter((continent) => continent.name === continentName))[0];\n  const [countries, setCountries] = useState([]);\n  let count = 1;\n  useEffect(() => {\n    let countriesStr = '';\n    for (let i = 0; i < continent.countries.length; i += 1) {\n      countriesStr += `${continent.countries[i]},`;\n    }\n    async function fetchData() {\n      await fetch(`https://corona.lmao.ninja/v2/countries/${countriesStr}?yesterday`)\n        .then((res) => (res.json()))\n        .then((data) => setCountries(data));\n    }\n    fetchData();\n  }, []);\n\n  function mapImg() {\n    switch (continentName) {\n      case 'Asia':\n        return <img className={style.mapImg} src={asiaIMG} alt=\"Continent Map\" />;\n      case 'North America':\n        return <img className={style.mapImg} src={northAmericaIMG} alt=\"Continent Map\" />;\n\n      case 'South America':\n        return <img className={style.mapImg} src={southAmericaIMG} alt=\"Continent Map\" />;\n\n      case 'Europe':\n        return <img className={style.mapImg} src={europeIMG} alt=\"Continent Map\" />;\n\n      case 'Australia-Oceania':\n        return <img className={style.mapImg} src={oceaniaIMG} alt=\"Continent Map\" />;\n\n      case 'Africa':\n        return <img className={style.mapImg} src={africaIMG} alt=\"Continent Map\" />;\n\n      default:\n        return null;\n    }\n  }\n  return (\n    <>\n      <Navbar pageTo=\"home\" />\n      <div className={style.continentHeader}>\n        {mapImg()}\n        <div>\n          {continent.name}\n          <br />\n          <span>\n            {new Intl.NumberFormat('en').format(continent.active)}\n            {' '}\n            active cases\n          </span>\n        </div>\n      </div>\n      <h2 className={style.title}>STATS BY CONTINENT</h2>\n      <div className={style.contriesDisplay}>\n        {countries.map(\n          (country) => {\n            if (count > 1) {\n              if (count === 3) {\n                count = 0;\n              } else { count += 1; }\n              return <CountriesDisplay key={country.countryInfo.id} country={country} color=\"true\" />;\n            }\n            count += 1;\n            return <CountriesDisplay key={country.countryInfo.id} country={country} color=\"false\" />;\n          },\n        )}\n      </div>\n    </>\n  );\n}\n\nexport default ContinentPage;\n"],"names":["CountriesDisplay","country","color","className","src","countryInfo","flag","alt","Intl","NumberFormat","format","active","defaultProps","continentName","useParams","continent","useSelector","state","continents","filter","name","useState","countries","setCountries","count","useEffect","countriesStr","i","length","fetch","then","res","json","data","fetchData","Navbar","pageTo","style","asiaIMG","northAmericaIMG","southAmericaIMG","europeIMG","oceaniaIMG","africaIMG","mapImg","map","id"],"sourceRoot":""}